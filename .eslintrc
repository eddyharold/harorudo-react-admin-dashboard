{
  "root": true,
  "extends": [
    "airbnb",
    "prettier",
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:react/jsx-runtime",
    "plugin:prettier/recommended",
    "plugin:tailwindcss/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/eslint-recommended"
  ],
  "plugins": ["react", "check-file", "@typescript-eslint"],
  "parserOptions": {
    "ecmaVersion": 2020,
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true,
      "arrowFunctions": true
    },
    "project": "./tsconfig.json"
  },
  "env": {
    "browser": true,
    "commonjs": true,
    "node": true,
    "es6": true,
    "jest": true
  },
  "rules": {
    "camelcase": "off",
    "react/prop-types": "off",
    "jsx-a11y/href-no-hash": "off",
    "import/no-unresolved": "off",
    "import/extensions": "off",
    "react/jsx-props-no-spreading": "off",
    "react/button-has-type": "off",
    "import/no-extraneous-dependencies": "off",
    "react/require-default-props": "off",
    "tailwindcss/no-custom-classname": "off",
    "no-unused-vars": "off",
    "no-empty-function": "off",
    "no-nested-ternary": "off",

    "check-file/no-index": "off",

    "no-plusplus": ["error", { "allowForLoopAfterthoughts": true }],

    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "vars": "all",
        "args": "after-used",
        "ignoreRestSiblings": false,
        "argsIgnorePattern": "^_",
        "varsIgnorePattern": "^_",
        "caughtErrorsIgnorePattern": "^_"
      }
    ],
    "@typescript-eslint/no-empty-function": ["error", { "allow": ["arrowFunctions"] }],
    "prettier/prettier": [
      "error",
      {
        "endOfLine": "auto"
      }
    ],
    "react/jsx-filename-extension": ["warn", { "extensions": [".ts", ".tsx"] }],
    "max-len": [
      "warn",
      {
        "code": 100,
        "tabWidth": 2,
        "comments": 100,
        "ignoreComments": false,
        "ignoreTrailingComments": true,
        "ignoreUrls": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreRegExpLiterals": true
      }
    ],

    "jsx-a11y/no-static-element-interactions": [
      "error",
      {
        "handlers": ["onClick", "onMouseDown", "onMouseUp", "onKeyPress", "onKeyDown", "onKeyUp"],
        "allowExpressionValues": true
      }
    ],

    "check-file/filename-naming-convention": [
      "error",
      {
        "src/**/*/index.{jsx,tsx}": "FLAT_CASE",

        "src/**/components/**/!(index).{jsx,tsx}": "PASCAL_CASE",
        "src/**/contexts/**/!(index).{jsx,tsx}": "PASCAL_CASE",
        "src/**/pages/**/!(index).{jsx,tsx}": "PASCAL_CASE",
        "src/**/layouts/**/!(index).{jsx,tsx}": "PASCAL_CASE",
        "src/**/routes/**/*.{jsx,tsx}": "PASCAL_CASE",

        "src/**/hooks/**/!(index).*": "CAMEL_CASE",

        "src/main.{jsx,tsx}": "KEBAB_CASE",

        "**/*.{js,ts}": "KEBAB_CASE",
        "**/*.{scss,css}": "KEBAB_CASE"
      },
      {
        "ignoreMiddleExtensions": true
      }
    ],

    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "memberLike",
        "modifiers": ["private"],
        "format": ["camelCase"],
        "leadingUnderscore": "require"
      },

      {
        "selector": "variable",
        "modifiers": ["destructured"],
        "format": null
      },
      {
        "selector": "variable",
        "format": ["camelCase", "UPPER_CASE", "PascalCase"]
      },
      {
        "selector": ["variable"],
        "types": ["boolean"],
        "format": ["PascalCase"],
        "prefix": ["is", "should", "has", "can", "did", "will"]
      },

      {
        "selector": "typeParameter",
        "format": ["PascalCase"],
        "prefix": ["T"]
      },

      {
        "selector": "interface",
        "format": ["PascalCase"],
        "custom": {
          "regex": "^I[A-Z]",
          "match": true
        }
      },

      {
        "selector": "parameter",
        "format": ["camelCase"],
        "leadingUnderscore": "allow"
      },

      {
        "selector": "typeLike",
        "format": ["PascalCase"]
      }
    ],
    "react/function-component-definition": [
      "warn",
      {
        "namedComponents": ["function-declaration", "function-expression", "arrow-function"],
        "unnamedComponents": ["function-expression", "arrow-function"]
      }
    ],
    "react/no-unstable-nested-components": [
      "error",
      {
        "allowAsProps": true
      }
    ]
  },
  "settings": {
    "tailwindcss": {
      "callees": ["clsx"],
      "config": "./tailwind.config.js"
    },
    "react": {
      "version": "detect"
    }
  },
  "overrides": [
    {
      "files": ["*.ts", "*.tsx"],
      "parser": "@typescript-eslint/parser"
    }
  ]
}
